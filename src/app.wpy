<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: ['pages/xiandu', 'pages/meizi', 'pages/me', 'pages/test', 'pages/news_detail'],
    window: {
      backgroundTextStyle: 'light',
      navigationBarTextStyle: 'black',
      navigationBarBackgroundColor: '#eee',
      navigationBarTitleText: 'MeiZi'
    },
    tabBar: {
      list: [
        {
          pagePath: 'pages/xiandu',
          text: 'xiandu',
          iconPath: 'images/xiandu.png',
          selectedIconPath: 'images/xiandu_active.png'
        },
        {
          pagePath: 'pages/meizi',
          text: 'meizi',
          iconPath: 'images/new.png',
          selectedIconPath: 'images/new_active.png'
        },
        {
          pagePath: 'pages/me',
          text: 'me',
          iconPath: 'images/me.png',
          selectedIconPath: 'images/me_active.png'
        },
        {
          pagePath: 'pages/test',
          text: 'test',
          iconPath: 'images/xiandu.png',
          selectedIconPath: 'images/xiandu_active.png'
        }
      ]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor() {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  onLaunch() {
    this.testAsync()
  }

  sleep(s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync() {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success(res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>

<style lang="less">
@import "style/weui/weui.less";

.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>
